# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, and run tests across different versions of Node.js
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD for Frontend and Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    # Setup Node.js environment
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4.0.4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Optional: caching npm dependencies
        cache-dependency-path: ./frontend/package-lock.json

    # Change directory to frontend and install dependencies
    - name: Install frontend dependencies
      run: npm install
      working-directory: ./frontend

    # Build the frontend project (if applicable)
    - name: Build the frontend project
      run: npm run build --if-present
      working-directory: ./frontend

    # Run frontend tests
    - name: Run frontend tests
      run: npm test
      working-directory: ./frontend

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend  # Ensure backend builds after frontend

    steps:
    - uses: actions/checkout@v4

    # Setup Node.js environment for backend
    - name: Setup Node.js for backend
      uses: actions/setup-node@v4.0.4
      with:
        node-version: '18.x'  # Specify the Node.js version for the backend
        cache: 'npm' # Optional: caching npm dependencies
        cache-dependency-path: ./backend/package-lock.json

    # Install backend dependencies
    - name: Install backend dependencies
      run: npm install
      working-directory: ./backend

    # Build the backend project (if applicable)
    - name: Build the backend project
      run: npm run build --if-present
      working-directory: ./backend

    # Run backend tests
    - name: Run backend tests
      run: npm test
      working-directory: ./backend
