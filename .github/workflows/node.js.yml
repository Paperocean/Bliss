name: CI/CD for Frontend and Backend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js environment for frontend
      - name: Setup Node.js ${{ matrix.node-version }} for frontend
        uses: actions/setup-node@v4.0.4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ./frontend/package-lock.json

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      # Build the frontend project (if applicable)
      - name: Build frontend project
        run: npm run build --if-present
        working-directory: ./frontend

      # Start frontend service
      - name: Start frontend service
        run: npm start &
        working-directory: ./frontend

      # Wait for frontend to be ready (if necessary)
      - name: Wait for frontend to be ready
        run: sleep 10 # Adjust this time as necessary

      # Run frontend tests
      - name: Run frontend tests
        run: npm test
        working-directory: ./frontend

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend # Ensure backend builds after frontend

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js environment for backend
      - name: Setup Node.js ${{ matrix.node-version }} for backend
        uses: actions/setup-node@v4.0.4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ./backend/package-lock.json

      # Install backend dependencies
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      # Build the backend project (if applicable)
      - name: Build backend project
        run: npm run build --if-present
        working-directory: ./backend

      # Start backend service using Docker Compose
      - name: Start backend service with Docker Compose
        run: docker-compose up --build -d
        working-directory: ./backend

      # Wait for backend to be ready (if necessary)
      - name: Wait for backend to be ready
        run: sleep 10 # Adjust this time as necessary

      # Run backend tests
      - name: Run backend tests
        run: npm test
        working-directory: ./backend
